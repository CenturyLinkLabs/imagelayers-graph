apiVersion: v1
kind: Service
metadata:
  labels:
    app: imagelayers
  name: imagelayers
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8888
  selector:
    app: imagelayers
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: badger
  name: badger
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: badger
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: imagelayers-web
  name: imagelayers-web
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9000
    nodePort: 30900
  selector:
    app: imagelayers-web
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: imagelayers
  name: imagelayers
  namespace: default
spec:
  replicas: 1
  selector:
    app: imagelayers
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: imagelayers
      name: imagelayers
    spec:
      containers:
      - image: centurylink/imagelayers-api
        imagePullPolicy: IfNotPresent
        name: imagelayers
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: imagelayers-web
    version: kubernetes-v1.0
  name: imagelayers-web
  namespace: default
spec:
  replicas: 1
  selector:
    app: imagelayers-web
    version: kubernetes-v1.0
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: imagelayers-web
        version: kubernetes-v1.0
      name: imagelayers-web
    spec:
      containers:
      - image: ntfrnzn/imagelayers-ui:kubernetes-v1.0
        imagePullPolicy: IfNotPresent
        name: imagelayers-web
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: badger
  name: badger
  namespace: default
spec:
  replicas: 1
  selector:
    app: badger
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: badger
      name: badger
    spec:
      containers:
      - image: centurylink/badger
        imagePullPolicy: IfNotPresent
        name: badger
        resources: {}
        env:
        - name: MODE
          value: production
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
